version: '3.8'

services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: witproject-zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:latest
    container_name: witproject-kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper

  calculator:
    build:
      context: ./Calculator
      dockerfile: Dockerfile
    container_name: witproject-calculator
    ports:
      - "8083:8080"
      - "8086:8081"
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - MANAGEMENT_SERVER_PORT=8081
    depends_on:
      - kafka

  rest:
    build:
      context: ./Rest
      dockerfile: Dockerfile
    container_name: witproject-rest
    ports:
      - "8084:8080"
      - "8085:8081"  # Nova porta para m√©tricas do Prometheus
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - MANAGEMENT_SERVER_PORT=8081  # Porta para endpoints do actuator
    depends_on:
      - kafka

  prometheus:
    image: prom/prometheus:latest
    container_name: witproject-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - rest

  grafana:
    image: grafana/grafana:latest
    container_name: witproject-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  grafana-storage: